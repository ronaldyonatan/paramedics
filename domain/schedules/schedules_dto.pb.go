// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.0--rc3
// source: domain/schedules/proto/schedules_dto.proto

package schedules

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduleCreateProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthcareid  string                 `protobuf:"bytes,1,opt,name=healthcareid,proto3" json:"healthcareid,omitempty"`
	Paramedicid   string                 `protobuf:"bytes,2,opt,name=paramedicid,proto3" json:"paramedicid,omitempty"`
	Schedulestart *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=schedulestart,proto3" json:"schedulestart,omitempty"`
	Scheduleend   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=scheduleend,proto3" json:"scheduleend,omitempty"`
	Duration      int32                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Usercreate    string                 `protobuf:"bytes,6,opt,name=usercreate,proto3" json:"usercreate,omitempty"`
}

func (x *ScheduleCreateProto) Reset() {
	*x = ScheduleCreateProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleCreateProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleCreateProto) ProtoMessage() {}

func (x *ScheduleCreateProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleCreateProto.ProtoReflect.Descriptor instead.
func (*ScheduleCreateProto) Descriptor() ([]byte, []int) {
	return file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleCreateProto) GetHealthcareid() string {
	if x != nil {
		return x.Healthcareid
	}
	return ""
}

func (x *ScheduleCreateProto) GetParamedicid() string {
	if x != nil {
		return x.Paramedicid
	}
	return ""
}

func (x *ScheduleCreateProto) GetSchedulestart() *timestamppb.Timestamp {
	if x != nil {
		return x.Schedulestart
	}
	return nil
}

func (x *ScheduleCreateProto) GetScheduleend() *timestamppb.Timestamp {
	if x != nil {
		return x.Scheduleend
	}
	return nil
}

func (x *ScheduleCreateProto) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ScheduleCreateProto) GetUsercreate() string {
	if x != nil {
		return x.Usercreate
	}
	return ""
}

type ScheduleProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheduleid    string `protobuf:"bytes,1,opt,name=scheduleid,proto3" json:"scheduleid,omitempty"`
	Healthcareid  string `protobuf:"bytes,2,opt,name=healthcareid,proto3" json:"healthcareid,omitempty"`
	Paramedicid   string `protobuf:"bytes,3,opt,name=paramedicid,proto3" json:"paramedicid,omitempty"`
	Schedulestart string `protobuf:"bytes,4,opt,name=schedulestart,proto3" json:"schedulestart,omitempty"`
	Scheduleend   string `protobuf:"bytes,5,opt,name=scheduleend,proto3" json:"scheduleend,omitempty"`
	Duration      int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ScheduleProto) Reset() {
	*x = ScheduleProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleProto) ProtoMessage() {}

func (x *ScheduleProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleProto.ProtoReflect.Descriptor instead.
func (*ScheduleProto) Descriptor() ([]byte, []int) {
	return file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleProto) GetScheduleid() string {
	if x != nil {
		return x.Scheduleid
	}
	return ""
}

func (x *ScheduleProto) GetHealthcareid() string {
	if x != nil {
		return x.Healthcareid
	}
	return ""
}

func (x *ScheduleProto) GetParamedicid() string {
	if x != nil {
		return x.Paramedicid
	}
	return ""
}

func (x *ScheduleProto) GetSchedulestart() string {
	if x != nil {
		return x.Schedulestart
	}
	return ""
}

func (x *ScheduleProto) GetScheduleend() string {
	if x != nil {
		return x.Scheduleend
	}
	return ""
}

func (x *ScheduleProto) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ScheduledetailProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheduleslotid int32                  `protobuf:"varint,1,opt,name=scheduleslotid,proto3" json:"scheduleslotid,omitempty"`
	Slottime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=slottime,proto3" json:"slottime,omitempty"`
	Isbooked       bool                   `protobuf:"varint,3,opt,name=isbooked,proto3" json:"isbooked,omitempty"`
}

func (x *ScheduledetailProto) Reset() {
	*x = ScheduledetailProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledetailProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledetailProto) ProtoMessage() {}

func (x *ScheduledetailProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledetailProto.ProtoReflect.Descriptor instead.
func (*ScheduledetailProto) Descriptor() ([]byte, []int) {
	return file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduledetailProto) GetScheduleslotid() int32 {
	if x != nil {
		return x.Scheduleslotid
	}
	return 0
}

func (x *ScheduledetailProto) GetSlottime() *timestamppb.Timestamp {
	if x != nil {
		return x.Slottime
	}
	return nil
}

func (x *ScheduledetailProto) GetIsbooked() bool {
	if x != nil {
		return x.Isbooked
	}
	return false
}

type ListscheduledetailProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schedules []*ScheduledetailProto `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *ListscheduledetailProto) Reset() {
	*x = ListscheduledetailProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListscheduledetailProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListscheduledetailProto) ProtoMessage() {}

func (x *ListscheduledetailProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListscheduledetailProto.ProtoReflect.Descriptor instead.
func (*ListscheduledetailProto) Descriptor() ([]byte, []int) {
	return file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP(), []int{3}
}

func (x *ListscheduledetailProto) GetSchedules() []*ScheduledetailProto {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type FindScheduleProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Healthcareid string                 `protobuf:"bytes,1,opt,name=healthcareid,proto3" json:"healthcareid,omitempty"`
	Paramedicid  string                 `protobuf:"bytes,2,opt,name=paramedicid,proto3" json:"paramedicid,omitempty"`
	Scheduledate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=scheduledate,proto3" json:"scheduledate,omitempty"`
}

func (x *FindScheduleProto) Reset() {
	*x = FindScheduleProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindScheduleProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindScheduleProto) ProtoMessage() {}

func (x *FindScheduleProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindScheduleProto.ProtoReflect.Descriptor instead.
func (*FindScheduleProto) Descriptor() ([]byte, []int) {
	return file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP(), []int{4}
}

func (x *FindScheduleProto) GetHealthcareid() string {
	if x != nil {
		return x.Healthcareid
	}
	return ""
}

func (x *FindScheduleProto) GetParamedicid() string {
	if x != nil {
		return x.Paramedicid
	}
	return ""
}

func (x *FindScheduleProto) GetScheduledate() *timestamppb.Timestamp {
	if x != nil {
		return x.Scheduledate
	}
	return nil
}

type SetScheduleProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheduleslotid int32 `protobuf:"varint,1,opt,name=scheduleslotid,proto3" json:"scheduleslotid,omitempty"`
}

func (x *SetScheduleProto) Reset() {
	*x = SetScheduleProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetScheduleProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScheduleProto) ProtoMessage() {}

func (x *SetScheduleProto) ProtoReflect() protoreflect.Message {
	mi := &file_domain_schedules_proto_schedules_dto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScheduleProto.ProtoReflect.Descriptor instead.
func (*SetScheduleProto) Descriptor() ([]byte, []int) {
	return file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP(), []int{5}
}

func (x *SetScheduleProto) GetScheduleslotid() int32 {
	if x != nil {
		return x.Scheduleslotid
	}
	return 0
}

var File_domain_schedules_proto_schedules_dto_proto protoreflect.FileDescriptor

var file_domain_schedules_proto_schedules_dto_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x02, 0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64, 0x69,
	0x63, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x65, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22,
	0xd9, 0x01, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63,
	0x61, 0x72, 0x65, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x65, 0x6e, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x01, 0x0a, 0x13,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73,
	0x6c, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x73,
	0x6c, 0x6f, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x22,
	0x57, 0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x3c, 0x0a, 0x09, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x11, 0x66, 0x69, 0x6e,
	0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x61, 0x72, 0x65,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64,
	0x69, 0x63, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x6c, 0x6f, 0x74, 0x69, 0x64,
	0x32, 0xb1, 0x03, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x4c, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x1e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x46,
	0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x1c,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x69, 0x6e, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x08, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x73, 0x2e, 0x73, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_domain_schedules_proto_schedules_dto_proto_rawDescOnce sync.Once
	file_domain_schedules_proto_schedules_dto_proto_rawDescData = file_domain_schedules_proto_schedules_dto_proto_rawDesc
)

func file_domain_schedules_proto_schedules_dto_proto_rawDescGZIP() []byte {
	file_domain_schedules_proto_schedules_dto_proto_rawDescOnce.Do(func() {
		file_domain_schedules_proto_schedules_dto_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_schedules_proto_schedules_dto_proto_rawDescData)
	})
	return file_domain_schedules_proto_schedules_dto_proto_rawDescData
}

var file_domain_schedules_proto_schedules_dto_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_domain_schedules_proto_schedules_dto_proto_goTypes = []interface{}{
	(*ScheduleCreateProto)(nil),     // 0: schedules.scheduleCreateProto
	(*ScheduleProto)(nil),           // 1: schedules.scheduleProto
	(*ScheduledetailProto)(nil),     // 2: schedules.scheduledetailProto
	(*ListscheduledetailProto)(nil), // 3: schedules.listscheduledetailProto
	(*FindScheduleProto)(nil),       // 4: schedules.findScheduleProto
	(*SetScheduleProto)(nil),        // 5: schedules.setScheduleProto
	(*timestamppb.Timestamp)(nil),   // 6: google.protobuf.Timestamp
}
var file_domain_schedules_proto_schedules_dto_proto_depIdxs = []int32{
	6,  // 0: schedules.scheduleCreateProto.schedulestart:type_name -> google.protobuf.Timestamp
	6,  // 1: schedules.scheduleCreateProto.scheduleend:type_name -> google.protobuf.Timestamp
	6,  // 2: schedules.scheduledetailProto.slottime:type_name -> google.protobuf.Timestamp
	2,  // 3: schedules.listscheduledetailProto.schedules:type_name -> schedules.scheduledetailProto
	6,  // 4: schedules.findScheduleProto.scheduledate:type_name -> google.protobuf.Timestamp
	0,  // 5: schedules.Schedule.CreateSchedule:input_type -> schedules.scheduleCreateProto
	4,  // 6: schedules.Schedule.FindScheduleAll:input_type -> schedules.findScheduleProto
	4,  // 7: schedules.Schedule.FindScheduleAvailable:input_type -> schedules.findScheduleProto
	4,  // 8: schedules.Schedule.FindScheduleBooked:input_type -> schedules.findScheduleProto
	5,  // 9: schedules.Schedule.BookSlot:input_type -> schedules.setScheduleProto
	1,  // 10: schedules.Schedule.CreateSchedule:output_type -> schedules.scheduleProto
	3,  // 11: schedules.Schedule.FindScheduleAll:output_type -> schedules.listscheduledetailProto
	3,  // 12: schedules.Schedule.FindScheduleAvailable:output_type -> schedules.listscheduledetailProto
	3,  // 13: schedules.Schedule.FindScheduleBooked:output_type -> schedules.listscheduledetailProto
	2,  // 14: schedules.Schedule.BookSlot:output_type -> schedules.scheduledetailProto
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_domain_schedules_proto_schedules_dto_proto_init() }
func file_domain_schedules_proto_schedules_dto_proto_init() {
	if File_domain_schedules_proto_schedules_dto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_schedules_proto_schedules_dto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleCreateProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_schedules_proto_schedules_dto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_schedules_proto_schedules_dto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledetailProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_schedules_proto_schedules_dto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListscheduledetailProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_schedules_proto_schedules_dto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindScheduleProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_schedules_proto_schedules_dto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetScheduleProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_schedules_proto_schedules_dto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_domain_schedules_proto_schedules_dto_proto_goTypes,
		DependencyIndexes: file_domain_schedules_proto_schedules_dto_proto_depIdxs,
		MessageInfos:      file_domain_schedules_proto_schedules_dto_proto_msgTypes,
	}.Build()
	File_domain_schedules_proto_schedules_dto_proto = out.File
	file_domain_schedules_proto_schedules_dto_proto_rawDesc = nil
	file_domain_schedules_proto_schedules_dto_proto_goTypes = nil
	file_domain_schedules_proto_schedules_dto_proto_depIdxs = nil
}
